2020-02-27 15:15:55,670  INFO Gbl:57 JVM: 1.8.0_241; Oracle Corporation; mixed mode; 64-bit
2020-02-27 15:15:55,670  INFO Gbl:61 OS: Windows 10; 10.0; amd64
2020-02-27 15:15:55,670  INFO Gbl:64 CPU cores: 8
2020-02-27 15:15:55,670  INFO Gbl:65 max. Memory: 2706.0MB (2837446656B)
2020-02-27 15:15:55,671  INFO Gbl:103 MATSim-Build: r2ddbc3d4ba23e13180ec0bc334dbf637a66e7c66 (2017-05-23 11:45:30)
2020-02-27 15:15:55,671  INFO AbstractController:58 Used Controler-Class: org.matsim.core.controler.NewControler
2020-02-27 15:15:55,671  INFO Config:537 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2020-02-27 15:15:55,672  INFO Injector:77 org.matsim.api.core.v01.Scenario 
2020-02-27 15:15:55,672  INFO Injector:78    -> of(org.matsim.core.scenario.MutableScenario@4dc27487)
2020-02-27 15:15:55,673  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:31), instance=org.matsim.core.scenario.MutableScenario@4dc27487}
2020-02-27 15:15:55,673  INFO Injector:77 org.matsim.api.core.v01.network.Network 
2020-02-27 15:15:55,675  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2020-02-27 15:15:55,675  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2020-02-27 15:15:55,675  INFO Injector:77 org.matsim.vehicles.Vehicles 
2020-02-27 15:15:55,676  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2020-02-27 15:15:55,676  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2020-02-27 15:15:55,676  INFO Injector:77 org.matsim.lanes.data.Lanes 
2020-02-27 15:15:55,676  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2020-02-27 15:15:55,676  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2020-02-27 15:15:55,676  INFO Injector:77 org.matsim.facilities.ActivityFacilities 
2020-02-27 15:15:55,676  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2020-02-27 15:15:55,676  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2020-02-27 15:15:55,676  INFO Injector:77 org.matsim.households.Households 
2020-02-27 15:15:55,676  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2020-02-27 15:15:55,676  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2020-02-27 15:15:55,677  INFO Injector:77 org.matsim.api.core.v01.population.PopulationFactory 
2020-02-27 15:15:55,677  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2020-02-27 15:15:55,677  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2020-02-27 15:15:55,677  INFO Injector:77 org.matsim.api.core.v01.population.Population 
2020-02-27 15:15:55,678  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2020-02-27 15:15:55,678  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2020-02-27 15:15:55,678  INFO Injector:77 org.matsim.core.controler.ControlerI 
2020-02-27 15:15:55,678  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@23941fb4}[Scopes.SINGLETON]
2020-02-27 15:15:55,678  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8), scope=eager singleton, target=Key[type=org.matsim.core.controler.NewControler, annotation=[none]]}
2020-02-27 15:15:55,678  INFO Injector:77 org.matsim.core.controler.ControlerListenerManager 
2020-02-27 15:15:55,679  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5efa40fe[Scopes.SINGLETON]}
2020-02-27 15:15:55,679  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]}
2020-02-27 15:15:55,679  INFO Injector:77 org.matsim.core.controler.PrepareForSim 
2020-02-27 15:15:55,679  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@49c90a9c}
2020-02-27 15:15:55,679  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]}
2020-02-27 15:15:55,679  INFO Injector:77 org.matsim.core.controler.TerminationCriterion 
2020-02-27 15:15:55,679  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6f36c2f0}
2020-02-27 15:15:55,679  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]}
2020-02-27 15:15:55,679  INFO Injector:77 org.matsim.core.controler.MatsimServices 
2020-02-27 15:15:55,679  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@700fb871}
2020-02-27 15:15:55,680  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]}
2020-02-27 15:15:55,680  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansScoring 
2020-02-27 15:15:55,680  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@13d73f29[Scopes.SINGLETON]}
2020-02-27 15:15:55,680  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]}
2020-02-27 15:15:55,680  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansReplanning 
2020-02-27 15:15:55,680  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5e3f861[Scopes.SINGLETON]}
2020-02-27 15:15:55,680  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]}
2020-02-27 15:15:55,680  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansDumping 
2020-02-27 15:15:55,680  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@415b0b49[Scopes.SINGLETON]}
2020-02-27 15:15:55,680  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]}
2020-02-27 15:15:55,680  INFO Injector:77 org.matsim.core.controler.corelisteners.EventsHandling 
2020-02-27 15:15:55,681  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7d322cad[Scopes.SINGLETON]}
2020-02-27 15:15:55,681  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]}
2020-02-27 15:15:55,681  INFO Injector:77 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2020-02-27 15:15:55,681  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@147e2ae7[Scopes.SINGLETON]}
2020-02-27 15:15:55,681  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]}
2020-02-27 15:15:55,681  INFO Injector:77 org.matsim.core.api.experimental.events.EventsManager 
2020-02-27 15:15:55,681  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7098b907}[Scopes.SINGLETON]
2020-02-27 15:15:55,681  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23), scope=eager singleton, target=Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]}
2020-02-27 15:15:55,681  INFO Injector:77 org.matsim.core.mobsim.framework.Mobsim 
2020-02-27 15:15:55,681  INFO Injector:78    -> Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]
2020-02-27 15:15:55,682  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.Mobsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:27), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]}
2020-02-27 15:15:55,682  INFO Injector:77 org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory 
2020-02-27 15:15:55,682  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@36804139}
2020-02-27 15:15:55,682  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.DefaultQNetworkFactory, annotation=[none]]}
2020-02-27 15:15:55,682  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2020-02-27 15:15:55,682  INFO Injector:78    -> Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2020-02-27 15:15:55,682  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2020-02-27 15:15:55,682  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2020-02-27 15:15:55,682  INFO Injector:78    -> of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@4ee203eb)
2020-02-27 15:15:55,682  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34), instance=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@4ee203eb}
2020-02-27 15:15:55,682  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionFactory 
2020-02-27 15:15:55,682  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3e78b6a5}
2020-02-27 15:15:55,683  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]}
2020-02-27 15:15:55,683  INFO Injector:77 org.matsim.core.scoring.functions.ScoringParametersForPerson 
2020-02-27 15:15:55,683  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2438dcd}
2020-02-27 15:15:55,683  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.SubpopulationScoringParameters, annotation=[none]]}
2020-02-27 15:15:55,683  INFO Injector:77 org.matsim.core.scoring.ExperiencedPlansService 
2020-02-27 15:15:55,683  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@18f8cd79}[Scopes.SINGLETON]
2020-02-27 15:15:55,683  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10), scope=eager singleton, target=Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]}
2020-02-27 15:15:55,683  INFO Injector:77 org.matsim.core.router.MainModeIdentifier 
2020-02-27 15:15:55,683  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@50f6ac94}
2020-02-27 15:15:55,683  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]}
2020-02-27 15:15:55,683  INFO Injector:77 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2020-02-27 15:15:55,684  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1a5b6f42[Scopes.SINGLETON]}
2020-02-27 15:15:55,684  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], source=org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.DijkstraFactory, annotation=[none]]}
2020-02-27 15:15:55,684  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2020-02-27 15:15:55,684  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@747edf66
2020-02-27 15:15:55,684  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@747edf66}
2020-02-27 15:15:55,684  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2020-02-27 15:15:55,684  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@3d1cfad4
2020-02-27 15:15:55,684  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@3d1cfad4}
2020-02-27 15:15:55,684  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2020-02-27 15:15:55,684  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@62230c58
2020-02-27 15:15:55,684  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@62230c58}
2020-02-27 15:15:55,685  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2020-02-27 15:15:55,685  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@2cd2a21f
2020-02-27 15:15:55,685  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@2cd2a21f}
2020-02-27 15:15:55,685  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2020-02-27 15:15:55,685  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@2e55dd0c
2020-02-27 15:15:55,685  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@2e55dd0c}
2020-02-27 15:15:55,685  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2020-02-27 15:15:55,685  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@74455848
2020-02-27 15:15:55,685  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@74455848}
2020-02-27 15:15:55,685  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2020-02-27 15:15:55,685  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@e7edb54
2020-02-27 15:15:55,685  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@e7edb54}
2020-02-27 15:15:55,685  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2020-02-27 15:15:55,686  INFO Injector:78    -> org.matsim.core.router.NetworkRouting@378542de
2020-02-27 15:15:55,686  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.NetworkRouting@378542de}
2020-02-27 15:15:55,686  INFO Injector:77 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2020-02-27 15:15:55,686  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2c78324b}
2020-02-27 15:15:55,686  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:49), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]}
2020-02-27 15:15:55,686  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ChangeExpBeta)
2020-02-27 15:15:55,686  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]
2020-02-27 15:15:55,686  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeExpBeta)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:85), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]}
2020-02-27 15:15:55,686  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ReRoute)
2020-02-27 15:15:55,686  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]
2020-02-27 15:15:55,686  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:98), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2020-02-27 15:15:55,686  INFO Injector:77 org.matsim.core.replanning.ReplanningContext 
2020-02-27 15:15:55,686  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@38af9828[Scopes.SINGLETON]}[Scopes.SINGLETON]
2020-02-27 15:15:55,687  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:48), scope=eager singleton, target=Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]}
2020-02-27 15:15:55,687  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=41, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2020-02-27 15:15:55,687  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=41, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2020-02-27 15:15:55,687  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=41, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]}
2020-02-27 15:15:55,687  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=43, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2020-02-27 15:15:55,687  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=43, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]}
2020-02-27 15:15:55,687  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=43, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeExpBeta)]}
2020-02-27 15:15:55,687  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=45, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,687  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=45, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3e62d773[Scopes.SINGLETON]}
2020-02-27 15:15:55,687  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=45, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]}
2020-02-27 15:15:55,687  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=46, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,687  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=46, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4bff7da0}
2020-02-27 15:15:55,687  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=46, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]}
2020-02-27 15:15:55,687  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=47, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,687  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=47, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@776a6d9b}
2020-02-27 15:15:55,688  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=47, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]}
2020-02-27 15:15:55,688  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=48, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,688  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=48, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3cce57c7}
2020-02-27 15:15:55,688  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=48, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]}
2020-02-27 15:15:55,688  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=49, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,688  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=49, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@264f218[Scopes.SINGLETON]}
2020-02-27 15:15:55,688  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=49, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2020-02-27 15:15:55,688  INFO Injector:77 org.matsim.analysis.ScoreStats 
2020-02-27 15:15:55,688  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@264f218[Scopes.SINGLETON]}
2020-02-27 15:15:55,688  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2020-02-27 15:15:55,688  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=50, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,688  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=50, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1169afe1[Scopes.SINGLETON]}
2020-02-27 15:15:55,688  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=50, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]}
2020-02-27 15:15:55,688  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=51, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,688  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=51, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2ca923bb}
2020-02-27 15:15:55,688  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=51, type=MULTIBINDER, keyType=)], source=org.matsim.counts.CountsModule.install(CountsModule.java:42), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]}
2020-02-27 15:15:55,688  INFO Injector:77 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2020-02-27 15:15:55,689  INFO Injector:78    -> @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2020-02-27 15:15:55,689  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link>, annotation=[none]], source=org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup), scope=Scopes.SINGLETON, provider=@Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)}
2020-02-27 15:15:55,689  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=52, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,689  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=52, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@35a3d49f}
2020-02-27 15:15:55,689  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=52, type=MULTIBINDER, keyType=)], source=org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]}
2020-02-27 15:15:55,689  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=53, type=MULTIBINDER, keyType=)
2020-02-27 15:15:55,689  INFO Injector:78    -> Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2020-02-27 15:15:55,689  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=53, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:45), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]}
2020-02-27 15:15:55,690  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=54, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,690  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=54, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@74455848}
2020-02-27 15:15:55,690  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=54, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]}
2020-02-27 15:15:55,690  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=56, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,690  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=56, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@3d1cfad4}
2020-02-27 15:15:55,690  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=56, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]}
2020-02-27 15:15:55,690  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=58, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,690  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=58, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRouting@378542de}
2020-02-27 15:15:55,690  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=58, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]}
2020-02-27 15:15:55,690  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=60, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,690  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=60, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@2e55dd0c}
2020-02-27 15:15:55,690  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=60, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]}
2020-02-27 15:15:55,690  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,690  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@747edf66}
2020-02-27 15:15:55,690  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]}
2020-02-27 15:15:55,690  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,690  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@2cd2a21f}
2020-02-27 15:15:55,690  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2020-02-27 15:15:55,691  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,691  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@62230c58}
2020-02-27 15:15:55,691  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]}
2020-02-27 15:15:55,691  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,691  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@e7edb54}
2020-02-27 15:15:55,691  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]}
2020-02-27 15:15:55,691  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,691  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2020-02-27 15:15:55,691  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]}
2020-02-27 15:15:55,691  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MAPBINDER, keyType=java.lang.String)
2020-02-27 15:15:55,691  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@4ee203eb}[Scopes.SINGLETON]}
2020-02-27 15:15:55,691  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]}
2020-02-27 15:15:55,692  INFO Injector:77 org.matsim.core.controler.ControlerListenerManagerImpl 
2020-02-27 15:15:55,692  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@5efa40fe[Scopes.SINGLETON]
2020-02-27 15:15:55,692  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9), scope=eager singleton}
2020-02-27 15:15:55,692  INFO Injector:77 org.matsim.analysis.IterationStopWatch 
2020-02-27 15:15:55,692  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@27912e3[Scopes.SINGLETON]
2020-02-27 15:15:55,692  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.IterationStopWatch, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12), scope=eager singleton}
2020-02-27 15:15:55,692  INFO Injector:77 org.matsim.core.controler.OutputDirectoryHierarchy 
2020-02-27 15:15:55,692  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@4bbf6d0e[Scopes.SINGLETON]
2020-02-27 15:15:55,692  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.OutputDirectoryHierarchy, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13), scope=eager singleton}
2020-02-27 15:15:55,692  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2020-02-27 15:15:55,692  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@14f232c4[Scopes.SINGLETON]
2020-02-27 15:15:55,692  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionsForPopulation, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10), scope=eager singleton}
2020-02-27 15:15:55,692  INFO Injector:77 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2020-02-27 15:15:55,692  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@cd1e646[Scopes.SINGLETON]
2020-02-27 15:15:55,693  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25), scope=eager singleton}
2020-02-27 15:15:55,693  INFO Injector:77 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2020-02-27 15:15:55,693  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@16c069df[Scopes.SINGLETON]
2020-02-27 15:15:55,693  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.trafficmonitoring.TravelTimeCalculator, annotation=[none]], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:73), scope=Scopes.SINGLETON}
2020-02-27 15:15:55,693  INFO Injector:77 org.matsim.core.scoring.EventsToActivities 
2020-02-27 15:15:55,693  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3336e6b6[Scopes.SINGLETON]
2020-02-27 15:15:55,693  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToActivities, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12), scope=eager singleton}
2020-02-27 15:15:55,693  INFO Injector:77 org.matsim.core.scoring.EventsToLegs 
2020-02-27 15:15:55,693  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@6dd7b5a3[Scopes.SINGLETON]
2020-02-27 15:15:55,694  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToLegs, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13), scope=eager singleton}
2020-02-27 15:15:55,694  INFO Injector:77 org.matsim.core.router.TripRouter 
2020-02-27 15:15:55,694  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@189cbd7c
2020-02-27 15:15:55,694  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.TripRouter, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43), scope=Scopes.NO_SCOPE}
2020-02-27 15:15:55,694  INFO Injector:77 org.matsim.core.router.SingleModeNetworksCache 
2020-02-27 15:15:55,694  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@44be0077[Scopes.SINGLETON]
2020-02-27 15:15:55,694  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.SingleModeNetworksCache, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47), scope=eager singleton}
2020-02-27 15:15:55,694  INFO Injector:77 org.matsim.core.replanning.StrategyManager 
2020-02-27 15:15:55,694  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@5e21e98f[Scopes.SINGLETON]
2020-02-27 15:15:55,694  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.replanning.StrategyManager, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:47), scope=Scopes.SINGLETON}
2020-02-27 15:15:55,694  INFO Injector:77 org.matsim.analysis.CalcLinkStats 
2020-02-27 15:15:55,694  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@239105a8[Scopes.SINGLETON]
2020-02-27 15:15:55,694  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLinkStats, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37), scope=eager singleton}
2020-02-27 15:15:55,694  INFO Injector:77 org.matsim.analysis.LinkStatsControlerListener 
2020-02-27 15:15:55,694  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3e62d773[Scopes.SINGLETON]
2020-02-27 15:15:55,695  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46), scope=eager singleton}
2020-02-27 15:15:55,695  INFO Injector:77 org.matsim.analysis.VolumesAnalyzer 
2020-02-27 15:15:55,695  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7b993c65[Scopes.SINGLETON]
2020-02-27 15:15:55,695  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.VolumesAnalyzer, annotation=[none]], source=org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31), scope=eager singleton}
2020-02-27 15:15:55,695  INFO Injector:77 org.matsim.analysis.LegHistogram 
2020-02-27 15:15:55,695  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7f284218
2020-02-27 15:15:55,695  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LegHistogram, annotation=[none]], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30), scope=Scopes.NO_SCOPE}
2020-02-27 15:15:55,695  INFO Injector:77 org.matsim.analysis.CalcLegTimes 
2020-02-27 15:15:55,695  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3fa247d1[Scopes.SINGLETON]
2020-02-27 15:15:55,695  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLegTimes, annotation=[none]], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31), scope=Scopes.SINGLETON}
2020-02-27 15:15:55,695  INFO Injector:77 org.matsim.analysis.TravelDistanceStats 
2020-02-27 15:15:55,695  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@5f0fd5a0[Scopes.SINGLETON]
2020-02-27 15:15:55,695  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.TravelDistanceStats, annotation=[none]], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10), scope=eager singleton}
2020-02-27 15:15:55,695  INFO Injector:77 org.matsim.analysis.ScoreStatsControlerListener 
2020-02-27 15:15:55,695  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@264f218[Scopes.SINGLETON]
2020-02-27 15:15:55,696  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31), scope=Scopes.SINGLETON}
2020-02-27 15:15:55,696  INFO Injector:77 org.matsim.analysis.ModeStatsControlerListener 
2020-02-27 15:15:55,696  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1169afe1[Scopes.SINGLETON]
2020-02-27 15:15:55,696  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31), scope=Scopes.SINGLETON}
2020-02-27 15:15:55,696  INFO Injector:77 org.matsim.counts.CountsModule$CountsInitializer 
2020-02-27 15:15:55,696  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@2e32ccc5[Scopes.SINGLETON]
2020-02-27 15:15:55,696  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.counts.CountsModule$CountsInitializer, annotation=[none]], source=org.matsim.counts.CountsModule.install(CountsModule.java:43), scope=eager singleton}
2020-02-27 15:15:55,748  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2020-02-27 15:15:55,750  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2020-02-27 15:15:55,762  INFO NetworkImpl:156  node # 1
2020-02-27 15:15:55,762  INFO NetworkImpl:156  node # 2
2020-02-27 15:15:55,763  INFO NetworkImpl:152  link # 1
2020-02-27 15:15:55,764  INFO NetworkImpl:152  link # 2
2020-02-27 15:15:55,764  INFO NetworkImpl:156  node # 4
2020-02-27 15:15:55,764  INFO NetworkImpl:152  link # 4
2020-02-27 15:15:55,765  INFO NetworkImpl:156  node # 8
2020-02-27 15:15:55,765  INFO NetworkImpl:152  link # 8
2020-02-27 15:15:55,765  INFO NetworkImpl:156  node # 16
2020-02-27 15:15:55,766  INFO NetworkImpl:152  link # 16
2020-02-27 15:15:55,766  INFO NetworkImpl:152  link # 32
2020-02-27 15:15:55,766  INFO NetworkImpl:156  node # 32
2020-02-27 15:15:55,767  INFO NetworkImpl:152  link # 64
2020-02-27 15:15:55,767  INFO NetworkImpl:156  node # 64
2020-02-27 15:15:55,769  INFO NetworkImpl:152  link # 128
2020-02-27 15:15:55,769  INFO NetworkImpl:156  node # 128
2020-02-27 15:15:55,771  INFO NetworkImpl:152  link # 256
2020-02-27 15:15:55,772  INFO NetworkImpl:156  node # 256
2020-02-27 15:15:55,774  INFO NetworkImpl:152  link # 512
2020-02-27 15:15:55,775  INFO NetworkImpl:156  node # 512
2020-02-27 15:15:55,781  INFO NetworkImpl:152  link # 1024
2020-02-27 15:15:55,782  INFO NetworkImpl:156  node # 1024
2020-02-27 15:15:55,791  INFO NetworkImpl:152  link # 2048
2020-02-27 15:15:55,792  INFO NetworkImpl:156  node # 2048
2020-02-27 15:15:55,809  INFO NetworkImpl:152  link # 4096
2020-02-27 15:15:55,810  INFO NetworkImpl:156  node # 4096
2020-02-27 15:15:55,823  INFO NetworkImpl:152  link # 8192
2020-02-27 15:15:55,824  INFO NetworkImpl:156  node # 8192
2020-02-27 15:15:55,842  INFO NetworkImpl:152  link # 16384
2020-02-27 15:15:55,848  INFO NetworkImpl:156  node # 16384
2020-02-27 15:15:55,878  INFO NetworkImpl:152  link # 32768
2020-02-27 15:15:55,903  INFO NetworkImpl:156  node # 32768
2020-02-27 15:15:55,938  INFO NetworkImpl:152  link # 65536
2020-02-27 15:15:56,750  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2020-02-27 15:15:56,751  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2020-02-27 15:15:56,751  INFO ControlerUtils:58 config dump before iterations start
2020-02-27 15:15:56,765  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>

<!-- ====================================================================== -->

	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >

		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />

		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />

		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>

<!-- ====================================================================== -->

<!-- ====================================================================== -->

	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>

<!-- ====================================================================== -->

	<module name="controler" >

		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />

		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />

		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />

		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />

		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />

		<!-- Default=1000;  -->
		<param name="lastIteration" value="1" />

		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />

		<param name="outputDirectory" value="./output" />

		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />

		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="10" />

		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />

		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />

		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="facilities" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />

		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />

		<param name="randomSeed" value="4711" />
	</module>

<!-- ====================================================================== -->

	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="linkStats" >

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />

		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="network" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="network.xml" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="parallelEventHandling" >

		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />

		<!-- Number of threads for parallel events handler. 0 or null means the framework decides by itself. -->
		<param name="numberOfThreads" value="null" />

		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />

		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />

		<param name="PathSizeLogitBeta" value="1.0" />

		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />

		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />

		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />

			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="16:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="work" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="08:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="car" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="pt" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="walk" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="bike" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="ride" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="other" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="plans" >

		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />

		<param name="inputPlansFile" value="New_Plan.xml" />

		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />

		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />

		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="ptCounts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />

		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />

		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />

		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />

		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />

		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />

		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />

		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />

		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />

		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />

		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />

		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />

		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="1.0" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />

		<param name="timeStepSize" value="00:00:01" />

		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />

		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />

		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />

		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />

		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />

		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />

		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>

<!-- ====================================================================== -->

	<module name="scenario" >
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />

		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />

		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="0.9" />

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />

		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.15" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ChangeExpBeta" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>

<!-- ====================================================================== -->

	<module name="transit" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />

		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />

		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />

		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />

		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />

		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />

		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >

		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />

		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />

		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />

		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />

		<!-- possible values: nullTravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />

		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>

<!-- ====================================================================== -->

	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="vspExperimental" >

		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />

		<param name="isGeneratingBoardingDeniedEvent" value="false" />

		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />

		<param name="logitScaleParamForPlansRemoval" value="1.0" />

		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />

		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>

<!-- ====================================================================== -->

</config>

2020-02-27 15:15:56,772  INFO ControlerUtils:63 Complete config dump done.
2020-02-27 15:15:56,773  INFO ControlerUtils:64 Checking consistency of config...
2020-02-27 15:15:56,773  INFO PlanCalcScoreConfigGroup$ScoringParameterSet:1182 NO OPENING OR CLOSING TIMES DEFINED!


There is no activity type that has an opening *and* closing time (or opening time and late penalty) defined.
This usually means that the activity chains can be shifted by an arbitrary
number of hours without having an effect on the score of the plans, and thus
resulting in wrong results / traffic patterns.
If you are using MATSim without time adaptation, you can ignore this warning.



2020-02-27 15:15:56,773  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2020-02-27 15:15:56,773  INFO ControlerUtils:66 Checking consistency of config done.
2020-02-27 15:15:56,785  INFO PrepareForSimImpl:56 Network seems to be multimodal. Create car-only network which is handed over to PersonPrepareForSim.
2020-02-27 15:15:56,785  INFO NetworkImpl:156  node # 1
2020-02-27 15:15:56,785  INFO NetworkImpl:156  node # 2
2020-02-27 15:15:56,785  INFO NetworkImpl:152  link # 1
2020-02-27 15:15:56,786  INFO NetworkImpl:152  link # 2
2020-02-27 15:15:56,786  INFO NetworkImpl:156  node # 4
2020-02-27 15:15:56,786  INFO NetworkImpl:152  link # 4
2020-02-27 15:15:56,786  INFO NetworkImpl:156  node # 8
2020-02-27 15:15:56,786  INFO NetworkImpl:152  link # 8
2020-02-27 15:15:56,786  INFO NetworkImpl:156  node # 16
2020-02-27 15:15:56,786  INFO NetworkImpl:152  link # 16
2020-02-27 15:15:56,786  INFO NetworkImpl:152  link # 32
2020-02-27 15:15:56,786  INFO NetworkImpl:156  node # 32
2020-02-27 15:15:56,786  INFO NetworkImpl:152  link # 64
2020-02-27 15:15:56,787  INFO NetworkImpl:156  node # 64
2020-02-27 15:15:56,787  INFO NetworkImpl:152  link # 128
2020-02-27 15:15:56,787  INFO NetworkImpl:156  node # 128
2020-02-27 15:15:56,787  INFO NetworkImpl:152  link # 256
2020-02-27 15:15:56,787  INFO NetworkImpl:156  node # 256
2020-02-27 15:15:56,787  INFO NetworkImpl:152  link # 512
2020-02-27 15:15:56,787  INFO NetworkImpl:156  node # 512
2020-02-27 15:15:56,788  INFO NetworkImpl:152  link # 1024
2020-02-27 15:15:56,788  INFO NetworkImpl:156  node # 1024
2020-02-27 15:15:56,789  INFO NetworkImpl:152  link # 2048
2020-02-27 15:15:56,789  INFO NetworkImpl:156  node # 2048
2020-02-27 15:15:56,791  INFO NetworkImpl:152  link # 4096
2020-02-27 15:15:56,791  INFO NetworkImpl:156  node # 4096
2020-02-27 15:15:56,797  INFO NetworkImpl:152  link # 8192
2020-02-27 15:15:56,798  INFO NetworkImpl:156  node # 8192
2020-02-27 15:15:56,812  INFO NetworkImpl:152  link # 16384
2020-02-27 15:15:56,815  INFO NetworkImpl:156  node # 16384
2020-02-27 15:15:56,843  INFO NetworkImpl:152  link # 32768
2020-02-27 15:15:56,859  INFO NetworkImpl:156  node # 32768
2020-02-27 15:15:56,892  INFO NetworkImpl:152  link # 65536
2020-02-27 15:15:57,000  INFO NetworkImpl:409 building QuadTree for nodes: xrange(4393620.566002089,4516160.842919497); yrange(5289681.043005339,5427206.435655455)
2020-02-27 15:15:57,058  INFO NetworkImpl:418 Building QuadTree took 0.083 seconds.
2020-02-27 15:15:57,223  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2020-02-27 15:15:58,342  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2020-02-27 15:15:58,450  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2020-02-27 15:15:58,618  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2020-02-27 15:15:58,940  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2020-02-27 15:15:59,532  INFO Counter:61 [PersonPrepareForSim] handled person # 32
2020-02-27 15:16:00,723  INFO Counter:61 [PersonPrepareForSim] handled person # 64
2020-02-27 15:16:02,827  INFO Counter:61 [PersonPrepareForSim] handled person # 128
2020-02-27 15:16:06,016  INFO Counter:61 [PersonPrepareForSim] handled person # 256
2020-02-27 15:16:14,351  INFO Counter:61 [PersonPrepareForSim] handled person # 512
2020-02-27 15:16:27,281  INFO Counter:61 [PersonPrepareForSim] handled person # 1024
2020-02-27 15:16:45,609  INFO Counter:61 [PersonPrepareForSim] handled person # 2048
2020-02-27 15:17:24,702  INFO Counter:61 [PersonPrepareForSim] handled person # 4096
2020-02-27 15:18:51,016  INFO Counter:61 [PersonPrepareForSim] handled person # 8192
2020-02-27 15:20:07,783  INFO Counter:61 [PersonPrepareForSim] handled person # 16384
2020-02-27 15:22:08,566  INFO Counter:61 [PersonPrepareForSim] handled person # 32768
2020-02-27 15:24:10,587  INFO Counter:67 [PersonPrepareForSim] handled person # 40626
2020-02-27 15:24:10,617  INFO AbstractController:133 ###################################################
2020-02-27 15:24:10,617  INFO AbstractController:134 ### ITERATION 0 BEGINS
2020-02-27 15:24:10,622  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2020-02-27 15:24:10,623  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2020-02-27 15:24:10,623  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2020-02-27 15:24:10,624  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on null
2020-02-27 15:24:10,638  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on null
2020-02-27 15:24:10,715  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2020-02-27 15:24:10,716  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2020-02-27 15:24:10,716  INFO EventsManagerImpl:170 resetting Event-Handlers
2020-02-27 15:24:10,717  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2020-02-27 15:24:10,756  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2020-02-27 15:24:10,756  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2020-02-27 15:24:10,756  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2020-02-27 15:24:10,756  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2020-02-27 15:24:10,756  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2020-02-27 15:24:10,756  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2020-02-27 15:24:10,803  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2020-02-27 15:24:10,803  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2020-02-27 15:24:10,803  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2020-02-27 15:24:10,803  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2020-02-27 15:24:10,803  INFO EventsManagerImpl:156 
2020-02-27 15:24:10,803  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2020-02-27 15:24:10,803  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2020-02-27 15:24:10,804  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2020-02-27 15:24:10,804  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2020-02-27 15:24:10,804  INFO EventsManagerImpl:156 
2020-02-27 15:24:10,804  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2020-02-27 15:24:10,804  INFO PlansDumpingImpl:75 dumping plans...
2020-02-27 15:24:10,834  INFO Counter:61 [PopulationWriter] dumped person # 1
2020-02-27 15:24:10,834  INFO Counter:61 [PopulationWriter] dumped person # 2
2020-02-27 15:24:10,835  INFO Counter:61 [PopulationWriter] dumped person # 4
2020-02-27 15:24:10,836  INFO Counter:61 [PopulationWriter] dumped person # 8
2020-02-27 15:24:10,840  INFO Counter:61 [PopulationWriter] dumped person # 16
2020-02-27 15:24:10,848  INFO Counter:61 [PopulationWriter] dumped person # 32
2020-02-27 15:24:10,870  INFO Counter:61 [PopulationWriter] dumped person # 64
2020-02-27 15:24:10,891  INFO Counter:61 [PopulationWriter] dumped person # 128
2020-02-27 15:24:10,910  INFO Counter:61 [PopulationWriter] dumped person # 256
2020-02-27 15:24:10,998  INFO Counter:61 [PopulationWriter] dumped person # 512
2020-02-27 15:24:11,080  INFO Counter:61 [PopulationWriter] dumped person # 1024
2020-02-27 15:24:11,337  INFO Counter:61 [PopulationWriter] dumped person # 2048
2020-02-27 15:24:11,809  INFO Counter:61 [PopulationWriter] dumped person # 4096
2020-02-27 15:24:12,638  INFO Counter:61 [PopulationWriter] dumped person # 8192
2020-02-27 15:24:13,957  INFO Counter:61 [PopulationWriter] dumped person # 16384
2020-02-27 15:24:16,684  INFO Counter:61 [PopulationWriter] dumped person # 32768
2020-02-27 15:24:18,207  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.0/0.plans.xml.gz
2020-02-27 15:24:18,207  INFO Counter:67 [PopulationWriter] dumped person # 40626
2020-02-27 15:24:18,207  INFO PlansDumpingImpl:92 finished plans dump.
2020-02-27 15:24:18,208  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2020-02-27 15:24:18,241  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2020-02-27 15:24:18,698  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2020-02-27 15:24:18,698  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2020-02-27 15:24:18,698  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2020-02-27 15:24:18,698  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2020-02-27 15:24:18,783  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2020-02-27 15:24:18,783  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2020-02-27 15:24:18,783  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2020-02-27 15:24:18,783  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2020-02-27 15:24:18,783  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2020-02-27 15:24:18,783  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2020-02-27 15:24:19,046  INFO QNetsimEngine:513 Assigned 48059 nodes and 91524 links to QSimEngineRunner #0
2020-02-27 15:24:19,160  INFO EventsManagerImpl:134  event # 1
2020-02-27 15:24:19,167  INFO EventsManagerImpl:134  event # 2
2020-02-27 15:24:19,168  INFO EventsManagerImpl:134  event # 4
2020-02-27 15:24:19,168  INFO EventsManagerImpl:134  event # 8
2020-02-27 15:24:19,169  INFO EventsManagerImpl:134  event # 16
2020-02-27 15:24:19,169  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=0 #nodes=7
2020-02-27 15:24:19,170  INFO QSim:500 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=40626 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2020-02-27 15:24:19,170  INFO Gbl:52 used RAM: 858177240B = 838063kB = 818MB  free: 871448872B = 831MB  total: 1729626112B = 1649MB
2020-02-27 15:24:19,170  INFO EventsManagerImpl:134  event # 32
2020-02-27 15:24:19,172  INFO EventsManagerImpl:134  event # 64
2020-02-27 15:24:19,174  INFO EventsManagerImpl:134  event # 128
2020-02-27 15:24:19,179  INFO EventsManagerImpl:134  event # 256
2020-02-27 15:24:19,186  INFO EventsManagerImpl:134  event # 512
2020-02-27 15:24:19,196  INFO EventsManagerImpl:134  event # 1024
2020-02-27 15:24:19,213  INFO EventsManagerImpl:134  event # 2048
2020-02-27 15:24:19,241  INFO EventsManagerImpl:134  event # 4096
2020-02-27 15:24:19,294  INFO EventsManagerImpl:134  event # 8192
2020-02-27 15:24:19,377  INFO EventsManagerImpl:134  event # 16384
2020-02-27 15:24:19,518  INFO EventsManagerImpl:134  event # 32768
2020-02-27 15:24:19,708  INFO EventsManagerImpl:134  event # 65536
2020-02-27 15:24:20,048  INFO EventsManagerImpl:134  event # 131072
2020-02-27 15:24:20,621  INFO EventsManagerImpl:134  event # 262144
2020-02-27 15:24:21,659  INFO EventsManagerImpl:134  event # 524288
2020-02-27 15:24:23,736  INFO EventsManagerImpl:134  event # 1048576
2020-02-27 15:24:27,918  INFO EventsManagerImpl:134  event # 2097152
2020-02-27 15:24:36,182  INFO EventsManagerImpl:134  event # 4194304
2020-02-27 15:24:41,331  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 10:00:00 : #links=4262 #nodes=1741
2020-02-27 15:24:41,332  INFO QSim:500 SIMULATION (NEW QSim) AT 10:00:00 : #Veh=40626 lost=0 simT=3600.0s realT=22s; (s/r): 163.63636363636363
2020-02-27 15:24:41,332  INFO Gbl:52 used RAM: 1591181408B = 1553888kB = 1517MB  free: 209747872B = 200MB  total: 1800929280B = 1717MB
2020-02-27 15:24:47,703  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=7 #nodes=0
2020-02-27 15:24:47,703  INFO QSim:500 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=40626 lost=0 simT=7200.0s realT=29s; (s/r): 248.27586206896552
2020-02-27 15:24:47,703  INFO Gbl:52 used RAM: 1664153256B = 1625149kB = 1587MB  free: 138348888B = 131MB  total: 1802502144B = 1719MB
2020-02-27 15:24:47,926  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=0 #nodes=0
2020-02-27 15:24:47,926  INFO QSim:500 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=40626 lost=0 simT=10800.0s realT=29s; (s/r): 372.41379310344826
2020-02-27 15:24:47,926  INFO Gbl:52 used RAM: 1666710240B = 1627646kB = 1589MB  free: 135791904B = 129MB  total: 1802502144B = 1719MB
2020-02-27 15:24:48,121  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=0 #nodes=0
2020-02-27 15:24:48,121  INFO QSim:500 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=40626 lost=0 simT=14400.0s realT=29s; (s/r): 496.55172413793105
2020-02-27 15:24:48,122  INFO Gbl:52 used RAM: 1669267208B = 1630143kB = 1591MB  free: 133234936B = 127MB  total: 1802502144B = 1719MB
2020-02-27 15:24:48,334  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 14:00:00 : #links=0 #nodes=0
2020-02-27 15:24:48,335  INFO QSim:500 SIMULATION (NEW QSim) AT 14:00:00 : #Veh=40626 lost=0 simT=18000.0s realT=29s; (s/r): 620.6896551724138
2020-02-27 15:24:48,335  INFO Gbl:52 used RAM: 1671824176B = 1632640kB = 1594MB  free: 130677968B = 124MB  total: 1802502144B = 1719MB
2020-02-27 15:24:48,521  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 15:00:00 : #links=0 #nodes=0
2020-02-27 15:24:48,521  INFO QSim:500 SIMULATION (NEW QSim) AT 15:00:00 : #Veh=40626 lost=0 simT=21600.0s realT=30s; (s/r): 720.0
2020-02-27 15:24:48,521  INFO Gbl:52 used RAM: 1671824176B = 1632640kB = 1594MB  free: 130677968B = 124MB  total: 1802502144B = 1719MB
2020-02-27 15:24:48,701  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 16:00:00 : #links=0 #nodes=0
2020-02-27 15:24:48,701  INFO QSim:500 SIMULATION (NEW QSim) AT 16:00:00 : #Veh=40626 lost=0 simT=25200.0s realT=30s; (s/r): 840.0
2020-02-27 15:24:48,701  INFO Gbl:52 used RAM: 1674381144B = 1635137kB = 1596MB  free: 128121000B = 122MB  total: 1802502144B = 1719MB
2020-02-27 15:24:48,880  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 17:00:00 : #links=0 #nodes=7
2020-02-27 15:24:48,880  INFO QSim:500 SIMULATION (NEW QSim) AT 17:00:00 : #Veh=40626 lost=0 simT=28800.0s realT=30s; (s/r): 960.0
2020-02-27 15:24:48,881  INFO Gbl:52 used RAM: 1674381144B = 1635137kB = 1596MB  free: 128121000B = 122MB  total: 1802502144B = 1719MB
2020-02-27 15:24:53,977  INFO EventsManagerImpl:134  event # 8388608
2020-02-27 15:25:09,811  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 18:00:00 : #links=4330 #nodes=1686
2020-02-27 15:25:09,811  INFO QSim:500 SIMULATION (NEW QSim) AT 18:00:00 : #Veh=18254 lost=0 simT=32400.0s realT=51s; (s/r): 635.2941176470588
2020-02-27 15:25:09,811  INFO Gbl:52 used RAM: 1176749888B = 1149169kB = 1122MB  free: 514603200B = 490MB  total: 1691353088B = 1613MB
2020-02-27 15:25:15,537  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 19:00:00 : #links=6 #nodes=2
2020-02-27 15:25:15,538  INFO QSim:500 SIMULATION (NEW QSim) AT 19:00:00 : #Veh=842 lost=0 simT=36000.0s realT=57s; (s/r): 631.578947368421
2020-02-27 15:25:15,538  INFO Gbl:52 used RAM: 1349042096B = 1317423kB = 1286MB  free: 366952528B = 349MB  total: 1715994624B = 1636MB
2020-02-27 15:25:15,739  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 20:00:00 : #links=0 #nodes=0
2020-02-27 15:25:15,739  INFO QSim:500 SIMULATION (NEW QSim) AT 20:00:00 : #Veh=1 lost=0 simT=39600.0s realT=57s; (s/r): 694.7368421052631
2020-02-27 15:25:15,739  INFO Gbl:52 used RAM: 1350787496B = 1319128kB = 1288MB  free: 365207128B = 348MB  total: 1715994624B = 1636MB
2020-02-27 15:25:15,786  INFO AbstractController$8:222 ### ITERATION 0 fires after mobsim event
2020-02-27 15:25:15,787  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2020-02-27 15:25:15,787  INFO Gbl:185 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=53.453125sec
2020-02-27 15:25:15,787  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 1691 seconds = 00:28:11
2020-02-27 15:25:15,788  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on null
2020-02-27 15:25:15,836  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2020-02-27 15:25:15,837  INFO AbstractController$4:159 ### ITERATION 0 fires scoring event
2020-02-27 15:25:15,837  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2020-02-27 15:25:15,859  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2020-02-27 15:25:15,882  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2020-02-27 15:25:15,883  INFO AbstractController$5:167 ### ITERATION 0 fires iteration end event
2020-02-27 15:25:15,883  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2020-02-27 15:25:15,888  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2020-02-27 15:25:15,888  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2020-02-27 15:25:15,888  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2020-02-27 15:25:15,903  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2020-02-27 15:25:15,903  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2020-02-27 15:25:15,947  INFO ModeStatsControlerListener:153 -- mode share of mode car = 0.6001083050263378
2020-02-27 15:25:15,948  INFO ModeStatsControlerListener:153 -- mode share of mode pt = 0.39989169497366217
2020-02-27 15:25:15,948  INFO ModeStatsControlerListener:153 -- mode share of mode walk = 0.0
2020-02-27 15:25:15,948  INFO ModeStatsControlerListener:153 -- mode share of mode bike = 0.0
2020-02-27 15:25:15,948  INFO ModeStatsControlerListener:153 -- mode share of mode ride = 0.0
2020-02-27 15:25:15,948  INFO ModeStatsControlerListener:153 -- mode share of mode other = 0.0
2020-02-27 15:25:15,948  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2020-02-27 15:25:15,961  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 108.53166050420012
2020-02-27 15:25:15,961  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 108.53166050420012
2020-02-27 15:25:15,961  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 108.53166050420012
2020-02-27 15:25:15,961  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 108.53166050420012
2020-02-27 15:25:15,962  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2020-02-27 15:25:15,966  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2020-02-27 15:25:15,983  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2020-02-27 15:25:15,983  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 23236.534243235325
2020-02-27 15:25:15,983  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2020-02-27 15:25:15,983  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2020-02-27 15:25:15,983  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2020-02-27 15:25:15,985  INFO LegHistogramListener:72 number of legs:	81252	100%
2020-02-27 15:25:15,985  INFO LegHistogramListener:79 number of car legs:	48760	60.01083050263378%
2020-02-27 15:25:15,986  INFO LegHistogramListener:79 number of pt legs:	32492	39.98916949736622%
2020-02-27 15:25:18,483  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2020-02-27 15:25:18,484  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2020-02-27 15:25:18,787  INFO AbstractController:177 ### ITERATION 0 ENDS
2020-02-27 15:25:18,787  INFO AbstractController:178 ###################################################
2020-02-27 15:25:18,787  INFO AbstractController:133 ###################################################
2020-02-27 15:25:18,787  INFO AbstractController:134 ### ITERATION 1 BEGINS
2020-02-27 15:25:18,788  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2020-02-27 15:25:18,788  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2020-02-27 15:25:18,788  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2020-02-27 15:25:18,788  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on null
2020-02-27 15:25:18,797  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on null
2020-02-27 15:25:18,837  INFO ControlerListenerManagerImpl:148 [it.1] all ControlerIterationStartsListeners called.
2020-02-27 15:25:18,837  INFO ControlerListenerManagerImpl:205 calling notifyReplanning on org.matsim.core.controler.corelisteners.PlansReplanningImpl
2020-02-27 15:25:18,838  INFO GenericStrategyManager:156 RandomPlanSelector_ReRoute: oldWeight=0.15 newWeight=0.0
2020-02-27 15:25:18,839  WARN ExpBetaPlanChanger:86 Would make sense to revise this once more.  See comments in code.  kai, nov08
2020-02-27 15:25:18,872  INFO AbstractMultithreadedModule:141 [PlanRouter] starting 2 threads, handling 0 plans
2020-02-27 15:25:18,873  INFO AbstractMultithreadedModule:156 [PlanRouter] all 2 threads finished.
2020-02-27 15:25:18,873  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 0 plans handled. Strategy: RandomPlanSelector_ReRoute
2020-02-27 15:25:18,873  INFO GenericPlanStrategyImpl:125 Plan-Strategy finished, 40626 plans handled. Strategy: ExpBetaPlanChanger
2020-02-27 15:25:18,873  INFO ControlerListenerManagerImpl:213 [it.1] all ControlerReplanningListeners called.
2020-02-27 15:25:18,874  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2020-02-27 15:25:18,874  INFO EventsManagerImpl:170 resetting Event-Handlers
2020-02-27 15:25:18,874  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2020-02-27 15:25:18,921  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2020-02-27 15:25:18,921  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2020-02-27 15:25:18,921  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2020-02-27 15:25:18,921  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2020-02-27 15:25:18,921  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2020-02-27 15:25:18,921  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2020-02-27 15:25:18,922  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2020-02-27 15:25:18,922  INFO PlansDumpingImpl:75 dumping plans...
2020-02-27 15:25:18,965  INFO Counter:61 [PopulationWriter] dumped person # 1
2020-02-27 15:25:18,966  INFO Counter:61 [PopulationWriter] dumped person # 2
2020-02-27 15:25:18,967  INFO Counter:61 [PopulationWriter] dumped person # 4
2020-02-27 15:25:18,969  INFO Counter:61 [PopulationWriter] dumped person # 8
2020-02-27 15:25:18,974  INFO Counter:61 [PopulationWriter] dumped person # 16
2020-02-27 15:25:18,982  INFO Counter:61 [PopulationWriter] dumped person # 32
2020-02-27 15:25:18,994  INFO Counter:61 [PopulationWriter] dumped person # 64
2020-02-27 15:25:19,011  INFO Counter:61 [PopulationWriter] dumped person # 128
2020-02-27 15:25:19,032  INFO Counter:61 [PopulationWriter] dumped person # 256
2020-02-27 15:25:19,196  INFO Counter:61 [PopulationWriter] dumped person # 512
2020-02-27 15:25:19,281  INFO Counter:61 [PopulationWriter] dumped person # 1024
2020-02-27 15:25:19,543  INFO Counter:61 [PopulationWriter] dumped person # 2048
2020-02-27 15:25:20,203  INFO Counter:61 [PopulationWriter] dumped person # 4096
2020-02-27 15:25:21,163  INFO Counter:61 [PopulationWriter] dumped person # 8192
2020-02-27 15:25:22,484  INFO Counter:61 [PopulationWriter] dumped person # 16384
2020-02-27 15:25:25,207  INFO Counter:61 [PopulationWriter] dumped person # 32768
2020-02-27 15:25:26,721  INFO PopulationWriter:139 Population written to: ./output/ITERS/it.1/1.plans.xml.gz
2020-02-27 15:25:26,773  INFO Counter:67 [PopulationWriter] dumped person # 40626
2020-02-27 15:25:26,773  INFO PlansDumpingImpl:92 finished plans dump.
2020-02-27 15:25:26,773  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2020-02-27 15:25:26,807  INFO ControlerListenerManagerImpl:232 [it.1] all ControlerBeforeMobsimListeners called.
2020-02-27 15:25:26,925  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2020-02-27 15:25:26,925  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2020-02-27 15:25:26,925  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2020-02-27 15:25:26,925  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2020-02-27 15:25:26,925  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2020-02-27 15:25:26,925  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2020-02-27 15:25:26,926  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2020-02-27 15:25:26,926  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2020-02-27 15:25:26,926  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2020-02-27 15:25:26,926  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2020-02-27 15:25:27,104  INFO QNetsimEngine:513 Assigned 48059 nodes and 91524 links to QSimEngineRunner #0
2020-02-27 15:25:27,153  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 09:00:00 : #links=0 #nodes=7
2020-02-27 15:25:27,154  INFO QSim:500 SIMULATION (NEW QSim) AT 09:00:00 : #Veh=40626 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2020-02-27 15:25:27,154  INFO Gbl:52 used RAM: 1279970840B = 1249971kB = 1220MB  free: 395129320B = 376MB  total: 1675100160B = 1597MB
2020-02-27 15:25:35,065  INFO EventsManagerImpl:134  event # 16777216
2020-02-27 15:25:40,993  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 10:00:00 : #links=4260 #nodes=1737
2020-02-27 15:25:40,993  INFO QSim:500 SIMULATION (NEW QSim) AT 10:00:00 : #Veh=40626 lost=0 simT=3600.0s realT=14s; (s/r): 257.14285714285717
2020-02-27 15:25:40,993  INFO Gbl:52 used RAM: 1043941016B = 1019473kB = 995MB  free: 758036840B = 722MB  total: 1801977856B = 1718MB
2020-02-27 15:25:44,166  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 11:00:00 : #links=7 #nodes=0
2020-02-27 15:25:44,166  INFO QSim:500 SIMULATION (NEW QSim) AT 11:00:00 : #Veh=40626 lost=0 simT=7200.0s realT=17s; (s/r): 423.52941176470586
2020-02-27 15:25:44,166  INFO Gbl:52 used RAM: 993408200B = 970125kB = 947MB  free: 628214584B = 599MB  total: 1621622784B = 1546MB
2020-02-27 15:25:44,356  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 12:00:00 : #links=0 #nodes=0
2020-02-27 15:25:44,356  INFO QSim:500 SIMULATION (NEW QSim) AT 12:00:00 : #Veh=40626 lost=0 simT=10800.0s realT=17s; (s/r): 635.2941176470588
2020-02-27 15:25:44,356  INFO Gbl:52 used RAM: 994983328B = 971663kB = 948MB  free: 626639456B = 597MB  total: 1621622784B = 1546MB
2020-02-27 15:25:44,548  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 13:00:00 : #links=0 #nodes=0
2020-02-27 15:25:44,548  INFO QSim:500 SIMULATION (NEW QSim) AT 13:00:00 : #Veh=40626 lost=0 simT=14400.0s realT=17s; (s/r): 847.0588235294117
2020-02-27 15:25:44,548  INFO Gbl:52 used RAM: 996558440B = 973201kB = 950MB  free: 625064344B = 596MB  total: 1621622784B = 1546MB
2020-02-27 15:25:44,728  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 14:00:00 : #links=0 #nodes=0
2020-02-27 15:25:44,728  INFO QSim:500 SIMULATION (NEW QSim) AT 14:00:00 : #Veh=40626 lost=0 simT=18000.0s realT=17s; (s/r): 1058.8235294117646
2020-02-27 15:25:44,728  INFO Gbl:52 used RAM: 999665440B = 976235kB = 953MB  free: 621957344B = 593MB  total: 1621622784B = 1546MB
2020-02-27 15:25:44,904  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 15:00:00 : #links=0 #nodes=0
2020-02-27 15:25:44,904  INFO QSim:500 SIMULATION (NEW QSim) AT 15:00:00 : #Veh=40626 lost=0 simT=21600.0s realT=18s; (s/r): 1200.0
2020-02-27 15:25:44,904  INFO Gbl:52 used RAM: 1001240552B = 977773kB = 954MB  free: 620382232B = 591MB  total: 1621622784B = 1546MB
2020-02-27 15:25:45,075  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 16:00:00 : #links=0 #nodes=0
2020-02-27 15:25:45,076  INFO QSim:500 SIMULATION (NEW QSim) AT 16:00:00 : #Veh=40626 lost=0 simT=25200.0s realT=18s; (s/r): 1400.0
2020-02-27 15:25:45,076  INFO Gbl:52 used RAM: 1002815664B = 979312kB = 956MB  free: 618807120B = 590MB  total: 1621622784B = 1546MB
2020-02-27 15:25:45,247  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 17:00:00 : #links=0 #nodes=7
2020-02-27 15:25:45,248  INFO QSim:500 SIMULATION (NEW QSim) AT 17:00:00 : #Veh=40626 lost=0 simT=28800.0s realT=18s; (s/r): 1600.0
2020-02-27 15:25:45,248  INFO Gbl:52 used RAM: 1004390776B = 980850kB = 957MB  free: 617232008B = 588MB  total: 1621622784B = 1546MB
2020-02-27 15:25:58,328  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 18:00:00 : #links=4347 #nodes=1705
2020-02-27 15:25:58,328  INFO QSim:500 SIMULATION (NEW QSim) AT 18:00:00 : #Veh=18253 lost=0 simT=32400.0s realT=31s; (s/r): 1045.1612903225807
2020-02-27 15:25:58,328  INFO Gbl:52 used RAM: 1210579552B = 1182206kB = 1154MB  free: 461899168B = 440MB  total: 1672478720B = 1595MB
2020-02-27 15:26:02,123  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 19:00:00 : #links=6 #nodes=2
2020-02-27 15:26:02,123  INFO QSim:500 SIMULATION (NEW QSim) AT 19:00:00 : #Veh=842 lost=0 simT=36000.0s realT=35s; (s/r): 1028.5714285714287
2020-02-27 15:26:02,123  INFO Gbl:52 used RAM: 1087837896B = 1062341kB = 1037MB  free: 724625720B = 691MB  total: 1812463616B = 1728MB
2020-02-27 15:26:02,319  INFO QNetsimEngine:358 SIMULATION (QNetsimEngine) AT 20:00:00 : #links=0 #nodes=0
2020-02-27 15:26:02,319  INFO QSim:500 SIMULATION (NEW QSim) AT 20:00:00 : #Veh=1 lost=0 simT=39600.0s realT=35s; (s/r): 1131.4285714285713
2020-02-27 15:26:02,320  INFO Gbl:52 used RAM: 1089564184B = 1064027kB = 1039MB  free: 722899432B = 689MB  total: 1812463616B = 1728MB
2020-02-27 15:26:02,354  INFO AbstractController$8:222 ### ITERATION 1 fires after mobsim event
2020-02-27 15:26:02,354  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2020-02-27 15:26:02,354  INFO Gbl:185 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=21.9375sec
2020-02-27 15:26:02,355  INFO LegTimesControlerListener:50 [1] average trip (probably: leg) duration is: 1691 seconds = 00:28:11
2020-02-27 15:26:02,355  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on null
2020-02-27 15:26:02,382  INFO ControlerListenerManagerImpl:251 [it.1] all ControlerAfterMobsimListeners called.
2020-02-27 15:26:02,382  INFO AbstractController$4:159 ### ITERATION 1 fires scoring event
2020-02-27 15:26:02,382  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2020-02-27 15:26:02,402  INFO NewScoreAssignerImpl:36 it: 1 msaStart: null
2020-02-27 15:26:02,427  INFO ControlerListenerManagerImpl:194 [it.1] all ControlerScoringListeners called.
2020-02-27 15:26:02,427  INFO AbstractController$5:167 ### ITERATION 1 fires iteration end event
2020-02-27 15:26:02,427  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2020-02-27 15:26:02,428  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2020-02-27 15:26:02,442  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2020-02-27 15:26:02,442  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2020-02-27 15:26:02,479  INFO ModeStatsControlerListener:153 -- mode share of mode car = 0.6001083050263378
2020-02-27 15:26:02,479  INFO ModeStatsControlerListener:153 -- mode share of mode pt = 0.39989169497366217
2020-02-27 15:26:02,479  INFO ModeStatsControlerListener:153 -- mode share of mode walk = 0.0
2020-02-27 15:26:02,480  INFO ModeStatsControlerListener:153 -- mode share of mode bike = 0.0
2020-02-27 15:26:02,480  INFO ModeStatsControlerListener:153 -- mode share of mode ride = 0.0
2020-02-27 15:26:02,480  INFO ModeStatsControlerListener:153 -- mode share of mode other = 0.0
2020-02-27 15:26:02,580  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2020-02-27 15:26:02,587  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: 108.53162802413176
2020-02-27 15:26:02,587  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: 108.53162802413176
2020-02-27 15:26:02,587  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: 108.53162802413176
2020-02-27 15:26:02,587  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: 108.53162802413176
2020-02-27 15:26:02,676  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2020-02-27 15:26:02,682  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2020-02-27 15:26:02,696  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2020-02-27 15:26:02,696  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 23236.534243235325
2020-02-27 15:26:02,697  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2020-02-27 15:26:02,697  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2020-02-27 15:26:02,800  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2020-02-27 15:26:02,802  INFO LegHistogramListener:72 number of legs:	81252	100%
2020-02-27 15:26:02,802  INFO LegHistogramListener:79 number of car legs:	48760	60.01083050263378%
2020-02-27 15:26:02,802  INFO LegHistogramListener:79 number of pt legs:	32492	39.98916949736622%
2020-02-27 15:26:03,350  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2020-02-27 15:26:03,350  INFO ControlerListenerManagerImpl:171 [it.1] all ControlerIterationEndsListeners called.
2020-02-27 15:26:03,458  INFO AbstractController:177 ### ITERATION 1 ENDS
2020-02-27 15:26:03,458  INFO AbstractController:178 ###################################################
2020-02-27 15:26:03,458  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2020-02-27 15:26:03,458  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2020-02-27 15:26:03,458  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2020-02-27 15:26:03,479  INFO Counter:61 [PopulationWriter] dumped person # 1
2020-02-27 15:26:03,479  INFO Counter:61 [PopulationWriter] dumped person # 2
2020-02-27 15:26:03,480  INFO Counter:61 [PopulationWriter] dumped person # 4
2020-02-27 15:26:03,481  INFO Counter:61 [PopulationWriter] dumped person # 8
2020-02-27 15:26:03,485  INFO Counter:61 [PopulationWriter] dumped person # 16
2020-02-27 15:26:03,493  INFO Counter:61 [PopulationWriter] dumped person # 32
2020-02-27 15:26:03,505  INFO Counter:61 [PopulationWriter] dumped person # 64
2020-02-27 15:26:03,523  INFO Counter:61 [PopulationWriter] dumped person # 128
2020-02-27 15:26:03,542  INFO Counter:61 [PopulationWriter] dumped person # 256
2020-02-27 15:26:03,619  INFO Counter:61 [PopulationWriter] dumped person # 512
2020-02-27 15:26:03,708  INFO Counter:61 [PopulationWriter] dumped person # 1024
2020-02-27 15:26:03,960  INFO Counter:61 [PopulationWriter] dumped person # 2048
2020-02-27 15:26:04,507  INFO Counter:61 [PopulationWriter] dumped person # 4096
2020-02-27 15:26:05,299  INFO Counter:61 [PopulationWriter] dumped person # 8192
2020-02-27 15:26:06,637  INFO Counter:61 [PopulationWriter] dumped person # 16384
2020-02-27 15:26:09,442  INFO Counter:61 [PopulationWriter] dumped person # 32768
2020-02-27 15:26:10,949  INFO PopulationWriter:139 Population written to: ./output/output_plans.xml.gz
2020-02-27 15:26:10,953  INFO Counter:67 [PopulationWriter] dumped person # 40626
2020-02-27 15:26:10,967  INFO NetworkWriter:68 Writing network to file: ./output/output_network.xml.gz...
2020-02-27 15:26:11,917  INFO NetworkWriter:71 done.
2020-02-27 15:26:11,926  INFO VehicleWriterV1:55 Vehicles written to: ./output/output_vehicles.xml.gz
2020-02-27 15:26:11,929  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2020-02-27 15:26:11,933  INFO LanesWriter:62 Using LaneDefinitionWriter20...
2020-02-27 15:26:11,934  INFO LanesWriter:71 writing to file: ./output/output_lanes.xml.gz
2020-02-27 15:26:12,186 ERROR DumpDataAtEndImpl:147 writing output events did not work; probably parameters were such that no events were generated in the final iteration
2020-02-27 15:26:12,187  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2020-02-27 15:26:12,187  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2020-02-27 15:26:12,187  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2020-02-27 15:26:12,187  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2020-02-27 15:26:12,188  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2020-02-27 15:26:12,188  INFO OutputDirectoryLogging:169 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
